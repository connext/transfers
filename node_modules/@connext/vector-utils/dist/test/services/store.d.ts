import { FullTransferState, FullChannelState, ChannelCommitmentData, IEngineStore, WithdrawCommitmentJson, StoredTransaction, TransactionReason } from "@connext/vector-types";
import { providers } from "ethers";
export declare class MemoryStoreService implements IEngineStore {
    getTransactionByHash(transactionHash: string): Promise<StoredTransaction | undefined>;
    saveTransactionFailure(channelAddress: string, transactionHash: string, error: string): Promise<void>;
    saveTransactionReceipt(channelAddress: string, transaction: providers.TransactionReceipt): Promise<void>;
    saveTransactionResponse(channelAddress: string, transactionReason: TransactionReason, response: providers.TransactionResponse): Promise<void>;
    private transfersInChannel;
    private transfers;
    private channelStates;
    private schemaVersion;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    clear(): Promise<void>;
    getChannelState(channelAddress: string): Promise<FullChannelState<any> | undefined>;
    getChannelStateByParticipants(participantA: string, participantB: string, chainId: number): Promise<FullChannelState<any> | undefined>;
    getChannelStates(): Promise<FullChannelState[]>;
    saveChannelState(channelState: FullChannelState, commitment: ChannelCommitmentData, transfer?: FullTransferState): Promise<void>;
    getActiveTransfers(channelAddress: string): Promise<FullTransferState[]>;
    getTransferState(transferId: string): Promise<FullTransferState | undefined>;
    getTransfersByRoutingId(routingId: string): Promise<FullTransferState[]>;
    getChannelCommitment(channelAddress: string): Promise<ChannelCommitmentData | undefined>;
    getSchemaVersion(): Promise<number | undefined>;
    updateSchemaVersion(version?: number): Promise<void>;
    getWithdrawalCommitment(transferId: string): Promise<WithdrawCommitmentJson | undefined>;
    saveWithdrawalCommitment(transferId: string, withdrawCommitment: WithdrawCommitmentJson): Promise<void>;
    getTransferByRoutingId(channelAddress: string, routingId: string): Promise<FullTransferState | undefined>;
}
//# sourceMappingURL=store.d.ts.map