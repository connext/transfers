/// <reference types="node" />
import { ILockService } from "@connext/vector-types";
import { Mutex, MutexInterface } from "async-mutex";
declare type InternalLock = {
    lock: Mutex;
    releaser: MutexInterface.Releaser;
    timer: NodeJS.Timeout;
    secret: string;
};
export declare class MemoryLockService implements ILockService {
    private readonly ttl;
    readonly locks: Map<string, InternalLock>;
    constructor(ttl?: number);
    acquireLock(lockName: string): Promise<string>;
    releaseLock(lockName: string, lockValue: string): Promise<void>;
    private randomValue;
}
export {};
//# sourceMappingURL=lock.d.ts.map