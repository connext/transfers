import { Static } from "@sinclair/typebox";
export declare const VectorNodeConfigSchema: import("@sinclair/typebox").TObject<{
    adminToken: import("@sinclair/typebox").TString;
    authUrl: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    chainAddresses: import("@sinclair/typebox").TMap<import("@sinclair/typebox").TObject<{
        channelFactoryAddress: import("@sinclair/typebox").TString;
        channelMastercopyAddress: import("@sinclair/typebox").TString;
        transferRegistryAddress: import("@sinclair/typebox").TString;
    }>>;
    chainProviders: import("@sinclair/typebox").TMap<import("@sinclair/typebox").TString>;
    dbUrl: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    logLevel: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TStringLiteral<"fatal">, import("@sinclair/typebox").TStringLiteral<"error">, import("@sinclair/typebox").TStringLiteral<"warn">, import("@sinclair/typebox").TStringLiteral<"info">, import("@sinclair/typebox").TStringLiteral<"debug">, import("@sinclair/typebox").TStringLiteral<"trace">, import("@sinclair/typebox").TStringLiteral<"silent">]>>;
    messagingUrl: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    mnemonic: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    natsUrl: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export declare type VectorNodeConfig = Static<typeof VectorNodeConfigSchema>;
//# sourceMappingURL=config.d.ts.map